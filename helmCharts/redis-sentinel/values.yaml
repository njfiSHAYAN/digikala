# Default values for redis-sentinel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 4
nameOverride: ""
fullnameOverride: ""
imagePullSecrets: []

clusterDomain: "cluster.local"

updateStrategy:
    type: RollingUpdate

redis:
  image: 
    repository: redis
    pullPolicy: IfNotPresent
    tag: 7.0.4 # versin must be 6 or grater

  containerPorts:
    redis: 6379
  
  # for data consistency
  config: |
    min-replicas-to-write 2
    min-replicas-max-lag 1

  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  
  resources:
    limits: {}
    #   cpu: 250m
    #   memory: 256Mi
    requests: {}
    #   cpu: 250m
    #   memory: 256Mi
  
  persistence:
    enabled: false
    ##  @param replica.persistence.path The path the volume will be mounted at on Redis&reg; replicas containers
    ## NOTE: Useful when using different Redis&reg; images
    ##
    path: /data
    subPath: ""
    storageClass: ""
    accessModes:
      - ReadWriteOnce

    size: 1Gi
    existingClaim: ""

sentinel:
  enabled: true

  image: 
    repository: redis
    pullPolicy: IfNotPresent
    tag: 7.0.4
  masterSet: mymaster
  quorum: 2
  downAfterMilliseconds: 5000
  failoverTimeout: 5000
  parallelSyncs: 1
  ## ref: https://redis.io/topics/sentinel
  ## extra config for sentinel
  config: |-

  containerPorts:
    sentinel: 26379
  
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  
  ## Persistence parameters
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: false
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
  resources:
    limits: {}
    requests: {}
  

auth:
  enabled: true
  replication:
    user: replication
    password: "1234"
  sentinel:
    user: default
    password: "12345"

  acl: 
    # user "default" is the default user ( act as admin ) and user "replication" is used by the nodes for the replication.
    # password can be sha-256 or plain text see: https://redis.io/docs/manual/security/acl/
    config: |-
      user default on >12345 ~* &* +@all 
      user replication on >1234 +psync +replconf +ping
      user worker on >123 ~* &* +@all -@dangerous
      
service:

    type: ClusterIP
    clusterIP: None
    ports:
      redis: 6379
      sentinel: 5000
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ## NOTE: choose port between <30000-32767>
    ## NOTE: By leaving these values blank, they will be generated by ports-configmap
    ##
    nodePorts:
      redis: ""
      sentinel: ""

metrics:
  enabled: true
  ## Bitnami Redis&reg; Exporter image
  ## ref: https://hub.docker.com/r/bitnami/redis-exporter/
  image:
    repository: bitnami/redis-exporter
    tag: 1.43.0-debian-11-r18
    pullPolicy: IfNotPresent
    
  redisTargetHost: "localhost"
  resources:
    limits: {}
    requests: {}
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"

  service:
    type: ClusterIP
    port: 9121

  